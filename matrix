#!/bin/bash

################################################################################
#Title: Matrix
#Author: Tiffani Auer (frieseti@oregonstate.edu)
#Class: OS CS344 - Winter 2019
#Description:
################################################################################

tempdims="tempdims$$"
temprow="temprow$$"
tempcol="tempcol$$"
tempmean="tempmeanfile$$"
tempsum="tempsumfile$$"

#dims funct#
function dims(){ 
	l=0
	c=0
	
	cat $1 >> $tempdims 

	#while read mtrx
	#do
	#	echo "$mtrx" >> $tempdims
	#done < $1 
		
	#columns#
	l=$(cat $tempdims | wc -l)

	#rows#
	c=$(cat $tempdims | head -n 1 | wc -w)
	
	#print dimensions#
	echo -e  "$l $c"
	
	rm -f $tempdims
}

#transpose funct#
function transpose(){
	j=1
	num=0

	#count cols in matrix#
	read col < $1
	for i in $col
	do
		((num++))
	done
	
	#column to row conversion
	while [[ "$j" -le "$num" ]]
	do			
		cut -f  $j $1  > $tempcol
		truncate -s-1 $tempcol
		cat $tempcol | tr '\n' '\t' >> $temprow
		echo >> $temprow
		((j++))
	done
	
	cat $temprow

	#clean up temp files#
	rm -f $tempcol
	rm -f $temprow
}


#mean funct#
function mean(){		
	l=0
	c=0
	#gather dimensions#
	l=$(wc -l < $1)
	c=$(head -n 1 $1 | wc -w)
	#print dimensions#
	echo -e  "$l $c"


}

#add funct#
function add(){
	echo "add successfully called!"
}

#multiply funct#
function multiply(){
	echo "multiply successfully called!"
}


#readMatrix funct#
function readmtrx(){
while read mtrx
do
	echo "$mtrx"
done < $1

}


#argument 1 from user, identifies what function they would like to use (dims, transpose etc)
#, and the rest passes the matrices to the arguments 
$1 "${@:2}"


