#!/bin/bash

################################################################################
#Title: Matrix
#Author: Tiffani Auer (frieseti@oregonstate.edu)
#Class: OS CS344 - Winter 2019
#Description:
################################################################################

temprow="temprow$$"
tempcol="tempcol$$"
tempmean="tempmeanfile$$"
tempsum="tempsumfile$$"

#dims funct#
function dims(){
	r=0
	c=0

	#counting rows#
	while read rows
	do
		((r++))
	done < $1

	#counting cols#
	read col < $1
	for i in $col
	do
		((c++))
	done
	
	#print dimensions#
	echo "$r $c"
}

#transpose funct#
function transpose(){
	j=1
	num=0

	#count cols in matrix#
	read col < $1
	for i in $col
	do
		((num++))
	done
	
	#double num to make up for blank space#
	#num=$(expr $num + $num)

	while [[ "$j" -le "$num" ]]
	do	
		#the column to row conversion#		
		cut -f  $j $1  > $tempcol
		cat $tempcol | tr '\n' '\t' >> $temprow
		echo >> $temprow
		#skips blank space#
		#j=$(expr $j + 2)
		((j++))
		#cut -c $j  
	done
		cat $temprow
		echo
		cat -A $temprow
}

#mean funct#
function mean(){
	echo "mean successfully called!!"
}

#add funct#
function add(){
	echo "add successfully called!"
}

#multiply funct#
function multiply(){
	echo "multiply successfully called!"
}


#readMatrix funct#
function readmtrx(){
while read mtrx
do
	echo "$mtrx"
done < $1
#$1 hecause its the first argument within scope#
}


#argument 1 from user, identifies what function they would like to use (dims, transpose etc)
#, and the rest passes the matrices to the arguments 
$1 "${@:2}"


